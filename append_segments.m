function S = append_segments(image_struct, filename, z_num, t_num, label)
%%apply_segments applies the binary mask in image_struct to the images
%%within the specified file to segement yeast buds into a structure array
%
%   inputs :
%       image_struct : A structure array containing tile_idx/image_plane,
%       binary masks, and the upper-left index of the masks. Typically
%       generated by segmentTrans.m.
%
%       filename : A string variable containing the name of the tiff stack
%       image file to segment
%
%       z_num : A scalar variable containing the number of z-planes per
%       z-stack within the image file.
%
%       t_num : A scalar variable containing the number of
%       timepoint/positions in the image file.
%
%       label : A string variable containing the name of the field you are
%       appending to image_struct array, i.e. GFP, RFP, Trans...
%
%   ouput :
%       S : A structure array containing the orignal image_struct
%       data, as well as the cropped images
%
%% open the image file
im_mat = readTiffStack(filename);
%% reshape the image file from stack to hyperstack format
im_nd = reshape(im_mat, [size(im_mat, 1), size(im_mat,2), z_num, t_num]);
max_project = squeeze(max(im_nd, [], 3));
%% Copy image_struct to S
S = image_struct;
%% Iterate over the image_struct and append the cropped segments
for n = 1:numel(image_struct)
    crop = max_project(...
        image_struct(n).binaryYX(1):...
        image_struct(n).binaryYX(1) + size(image_struct(n).binary, 1)-1,...
        image_struct(n).binaryYX(2):...
        image_struct(n).binaryYX(2) + size(image_struct(n).binary, 2)-1,...
        image_struct(n).tile_idx);
    S(n).(label)= crop .* image_struct(n).binary;
end
    